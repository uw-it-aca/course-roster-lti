autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 4
targetAverageUtilization: 100
resources:
  requests:
    cpu: 50m
affinity:
   podsSpanNodes: true

ingress:
  enabled: true
  tls:
    courseroster:
      secretName: courseroster.canvas.uw.edu-ingress-cert
      hosts:
        - courseroster.canvas.uw.edu
  hosts:
    courseroster:
      host: courseroster.canvas.uw.edu
      paths:
        - "/"
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt

lifecycle:
  enabled: true
  preStop:
    enabled: true
readiness:
  enabled: true

database:
  engine: null

repo: course-roster
instance: prod
namespace:
  enabled: true

memcached:
  enabled: true
  replicaCount: 2
  updateStrategy:
    type: RollingUpdate

certs:
  mounted: true
  certPath: /certs/courseroster.canvas.uw.edu-ic.cert
  keyPath: /certs/courseroster.canvas.uw.edu-ic.key
  secretName: courseroster.canvas.uw.edu-ic-certs

environmentVariables:
  - name: CLUSTER_CNAME
    value: courseroster.canvas.uw.edu
  - name: AUTH
    value: BLTI
  - name: ENV
    value: prod
  - name: SESSION_BACKEND
    value: MEMCACHED
  - name: PWS_ENV
    value: PROD
  - name: CANVAS_ENV
    value: PROD
  - name: CANVAS_TIMEOUT
    value: "10"
  - name: LTI_CONFIG_DIRECTORY
    value: /lti/config

externalSecrets:
  enabled: true
  secrets:
    - name: courseroster.canvas.uw.edu-secrets
      externalKey: course-roster/prod/secrets
      data:
        - name: django-secret
          property: django-secret
    - name: courseroster.canvas.uw.edu-shared-secrets
      externalKey: course-roster/shared/secrets
      data:
        - name: lti-consumers
          property: lti-consumers
        - name: blti-aes-key
          property: blti-aes-key
        - name: blti-aes-iv
          property: blti-aes-iv
    - name: courseroster.canvas.uw.edu-canvas-secrets
      externalKey: canvas/shared/secrets
      data:
        - name: canvas-api-token
          property: canvas-api-token
    - name: courseroster.canvas.uw.edu-lti-keys
      externalKey: courseroster/prod/lti-keys
      data:
        - name: private-key-1.key
          property: private-key-1.key
        - name: public-key-1.key
          property: public-key-1.key
    - name: courseroster.canvas.uw.edu-ic-certs
      externalKey: course-roster/prod/ic-certs
      data:
        - name: courseroster.canvas.uw.edu-ic.cert
          property: courseroster.canvas.uw.edu-ic.cert
        - name: courseroster.canvas.uw.edu-ic.key
          property: courseroster.canvas.uw.edu-ic.key

environmentVariablesSecrets:
  django-secret:
    name: DJANGO_SECRET
    secretName: courseroster.canvas.uw.edu-secrets
    secretKey: django-secret
  LTIConsumers:
    name: LTI_CONSUMERS
    secretName: courseroster.canvas.uw.edu-shared-secrets
    secretKey: lti-consumers
  BLTIAESKey:
    name: BLTI_AES_KEY
    secretName: courseroster.canvas.uw.edu-shared-secrets
    secretKey: blti-aes-key
  BLTIAESIV:
    name: BLTI_AES_IV
    secretName: courseroster.canvas.uw.edu-shared-secrets
    secretKey: blti-aes-iv
  canvasAPIToken:
    name: CANVAS_OAUTH_BEARER
    secretName: courseroster.canvas.uw.edu-canvas-secrets
    secretKey: canvas-api-token

mountedSecrets:
  enabled: true
  mountPath: /lti/keys
  secretName: courseroster.canvas.uw.edu-lti-keys

podVolumes:
  lti-tool-config:
    volume:
      configMap:
        name: lti-tool-config
    mount:
      mountPath: /lti/config
    containers: [base]

configmaps:
  lti-tool-config:
    tool.json: |
      {
        "https://canvas.instructure.com": [{
          "default": true,
          "client_id": "100000000000815",
          "auth_login_url": "https://sso.canvaslms.com/api/lti/authorize_redirect",
          "auth_token_url": "https://sso.canvaslms.com/login/oauth2/token",
          "key_set": null,
          "key_set_url": "https://sso.canvaslms.com/api/lti/security/jwks",
          "private_key_file": "/lti/keys/private-key-1.key",
          "public_key_file": "/lti/keys/public-key-1.key",
          "deployment_ids": [""]
        }]
      }
